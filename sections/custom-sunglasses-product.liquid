<div id="product-sunglasses">
    <section class="main-section">
        <div class="images-container">
            <img loading="lazy" class="active-image" :src="activeImage">
            <div class="preview-images">
                <img 
                    @click="activeImage = colors[activeOptions['Option1']]['Lens Image']" 
                    loading="lazy" 
                    :class="{'active': activeImage == colors[activeOptions['Option1']]['Lens Image']}" 
                    :src="colors[activeOptions['Option1']]['Lens Image']">
                <img 
                    @click="activeImage = colors[activeOptions['Option1']]['Human Image']" 
                    loading="lazy" 
                    :class="{'active': activeImage == colors[activeOptions['Option1']]['Human Image']}" 
                    :src="colors[activeOptions['Option1']]['Human Image']">
                <img 
                    @click="activeImage = colors[activeOptions['Option1']]['Frame Image']" 
                    loading="lazy" 
                    :class="{'active': activeImage == colors[activeOptions['Option1']]['Frame Image']}" 
                    :src="colors[activeOptions['Option1']]['Frame Image']">
            </div>
        </div>
        <div class="order-container">
            <h1 class="title">{{ product.title }}</h1>
            <h2 class="price">{{ product.price }}</h2>
            <div class="selection-container lens-color-container">
                <h3>Lens Color: <b>$%activeOptions['Option1']%$</b></h3>
                <div class="basic">
                    <h4>Basic Colors</h4>
                    <ul>
                        <template v-for="(colorValues, colorName) in colors">
                            <li v-if="colorValues['Mirror Color Type'] == 'Basic'"
                                :class="{'active': activeOptions['Option1'] == colorName}">
                                <button @click="activeOptions['Option1'] = colorName">$%colorName%$</button>
                            </li>
                        </template>
                    </ul>
                </div>
                <div class="mirrored">
                    <h4>Mirrored Colors <b>+$5</b></h4>
                    <ul>
                        <template v-for="(colorValues, colorName) in colors">
                            <li v-if="colorValues['Mirror Color Type'] == 'Mirrored'"
                                :class="{'active': activeOptions['Option1'] == colorName}">
                                <button @click="activeOptions['Option1'] = colorName">$%colorName%$</button>
                            </li>
                        </template>
                    </ul>
                </div>
            </div>
            <div class="selection-container lens-type-container">
                <h3>Select Lens Type:</h3>
                <ul>
                    <li v-for="lensType in product.options['Lens Type']"
                        :class="{'active': activeOptions['Option2'] == lensType}">
                        <button @click="activeOptions['Option2'] = lensType">$%lensType%$</button>
                    </li>
                </ul>
            </div>
            <div class="selection-container installation-type-container">
                <h3>Select Lens Type:</h3>
                <ul>
                    <li v-for="installationType in product.options['Installation Type']"
                        :class="{'active': activeOptions['Option3'] == installationType}">
                        <button @click="activeOptions['Option3'] = installationType">$%installationType%$</button>
                    </li>
                </ul>
            </div>
            <div class="cta-container">
                <button class="add-to-cart" @click="addToCart()">Add to Cart</button>
            </div>
        </div>
    </section>
</div>

{% render 'object-product' %}
{{ 'product-sunglasses.css' | asset_url | stylesheet_tag }}

<script src="{{ 'sunglasses-product.js' | asset_url }}"></script>

<script>
    const SunglassesProductApp = createApp(SunglassesProductComponent);
    SunglassesProductApp.mount('#product-sunglasses')
</script>

{% comment %} 
- css
- on add to cart failure, create an error catcher UX
{% endcomment %}